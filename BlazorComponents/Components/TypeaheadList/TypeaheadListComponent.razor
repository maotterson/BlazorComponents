@using BlazorComponents.WASM.Data.Models;
@using BlazorComponents.WASM.Data.Services;
@inject ExerciseService _exerciseService;
@inject IJSRuntime JSRuntime

<input @bind="@_search" type="text" @oninput="SearchChanged" />
<h6>results for @_search</h6>

<ul>
    @foreach (var ex in _filtered)
    {
        <li>
            @ex.Name @ex.MuscleGroups.Count
        </li>
    }
</ul>


@code {
    private List<Exercise> _allExercises => _exerciseService.Exercises;
    private static List<Exercise> EMPTY_LIST = new List<Exercise>();
    private List<Exercise> _filtered = EMPTY_LIST;
    private string _search = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await _exerciseService.Load();
    }

    private void SearchChanged(ChangeEventArgs args)
    {
        _search = args!.Value!.ToString()!;

        _filtered = string.IsNullOrEmpty(_search) ? 
            EMPTY_LIST : _allExercises.Where(e => e.Name.Contains(_search)).ToList();
        StateHasChanged();
    }
}
